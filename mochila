<!doctype html>
<html lang="pt-BR">
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Programação Dinâmica - Mochila 0/1</title>
<style>
body{font-family:Inter, system-ui, -apple-system,'Segoe UI', Roboto,'Helvetica Neue', Arial;padding:18px;background:#f7f9fb;color:#111}
h1{font-size:20px}
.input-row{display:flex;gap:8px;align-items:center;margin-bottom:8px}
input[type="number"], input[type="text"]{padding:6px 8px;border-radius:6px;border:1px solid #cbd5e1;width:80px}
button{padding:8px 12px;border-radius:8px;border:none;cursor:pointer;background:#2563eb;color:white}
button.secondary{background:#64748b}
table{border-collapse:collapse;background:white;box-shadow:0 2px 6px rgba(2,6,23,0.06)}
th,td{border:1px solid #e6eef8;padding:8px;text-align:right;min-width:40px}
.status{padding:8px;border-radius:8px;margin-top:10px}
.ok{background:#dcfce7;color:#065f46}
.error{background:#fee2e2;color:#9b1c1c}
.small{font-size:13px}
</style>
</head>
<body>
<h1>Mochila 0/1 - Programação Dinâmica (Interativo)</h1>

<div class="input-row">
<label class="small">Itens (n):</label>
<input id="nItems" type="number" value="3" min="1"/>
<label class="small">Capacidade (W):</label>
<input id="capacity" type="number" value="5" min="1"/>
<button id="build">Gerar Formulário</button>
</div>

<div id="formArea"></div>

<div style="margin-top:12px">
<button id="toTable">Criar Tabela DP</button>
<button id="autoSolve" class="secondary">Resolver automaticamente</button>
<button id="reset" class="secondary">Reset</button>
</div>

<div id="tableArea" style="margin-top:12px; overflow:auto"></div>
<div id="feedback" class="status small">Preencha os itens e clique em Criar Tabela DP.</div>
<div id="solution" class="status small"></div>

<script>
// Util
function round(x){return Math.round(x*1000)/1000}

// Formulário
function renderForm(){
  const n = +document.getElementById('nItems').value;
  const form = document.getElementById('formArea');
  form.innerHTML='';
  const header = document.createElement('div'); header.innerHTML='<strong>Itens: peso e valor</strong>'; form.appendChild(header);
  for(let i=0;i<n;i++){
    const row = document.createElement('div'); row.className='input-row';
    row.innerHTML=`<label class="small">Item ${i+1}:</label>
      Peso: <input type="number" step="1" value="1" id="w_${i}"/>
      Valor: <input type="number" step="1" value="1" id="v_${i}"/>`;
    form.appendChild(row);
  }
}

// Ler problema
function readProblem(){
  const n = +document.getElementById('nItems').value;
  const W = +document.getElementById('capacity').value;
  const w=[], v=[];
  for(let i=0;i<n;i++){
    w.push(+document.getElementById(`w_${i}`).value);
    v.push(+document.getElementById(`v_${i}`).value);
  }
  return {n,W,w,v};
}

// Montar tabela DP
let dpHistory=[], currentStep=0, problem=null, DP=null;
function buildTable(){
  problem = readProblem();
  const {n,W,w,v}=problem;
  DP = Array.from({length:n+1},()=>Array(W+1).fill(0));
  dpHistory = [DP.map(r=>r.slice())]; // step 0
  currentStep=0;
  renderTable(DP);
  document.getElementById('feedback').innerText='Tabela DP inicial criada.';
}

// Passo automático
function solveAllSteps(){
  const {n,W,w,v}=problem;
  DP = Array.from({length:n+1},()=>Array(W+1).fill(0));
  for(let i=1;i<=n;i++){
    for(let j=0;j<=W;j++){
      if(w[i-1]<=j){
        DP[i][j] = Math.max(DP[i-1][j], DP[i-1][j-w[i-1]] + v[i-1]);
      } else DP[i][j]=DP[i-1][j];
    }
    dpHistory.push(DP.map(r=>r.slice()));
  }
  renderTable(DP);
  showSolution();
  document.getElementById('feedback').innerText='Tabela resolvida automaticamente.';
}

// Renderizar tabela
function renderTable(table){
  const container = document.getElementById('tableArea');
  container.innerHTML='';
  const n = table.length-1;
  const W = table[0].length-1;
  const tbl = document.createElement('table');
  const thead = document.createElement('thead');
  let htr = document.createElement('tr');
  htr.appendChild(document.createElement('th'));
  for(let j=0;j<=W;j++){
    const th=document.createElement('th'); th.innerText=j; htr.appendChild(th);
  }
  thead.appendChild(htr);
  tbl.appendChild(thead);
  const tbody=document.createElement('tbody');
  for(let i=0;i<=n;i++){
    const tr=document.createElement('tr');
    const td=document.createElement('td'); td.innerText=i; tr.appendChild(td);
    for(let j=0;j<=W;j++){
      const td2=document.createElement('td'); td2.innerText=table[i][j]; tr.appendChild(td2);
    }
    tbody.appendChild(tr);
  }
  tbl.appendChild(tbody);
  container.appendChild(tbl);
}

// Extrair solução
function showSolution(){
  const {n,W,w,v}=problem;
  let res=[], j=W;
  for(let i=n;i>0;i--){
    if(DP[i][j] != DP[i-1][j]){
      res.push(i-1); j-=w[i-1];
    }
  }
  res.reverse();
  const solDiv=document.getElementById('solution');
  solDiv.innerHTML='Itens escolhidos: '+res.map(i=>`Item ${i+1} (peso=${w[i]}, valor=${v[i]})`).join(', ') +
    `<br/>Valor máximo: ${DP[n][W]}`;
}

// Eventos
document.getElementById('build').addEventListener('click', renderForm);
document.getElementById('toTable').addEventListener('click', buildTable);
document.getElementById('autoSolve').addEventListener('click', solveAllSteps);
document.getElementById('reset').addEventListener('click',()=>{
  document.getElementById('formArea').innerHTML='';
  document.getElementById('tableArea').innerHTML='';
  document.getElementById('feedback').innerText='Preencha os itens e clique em Criar Tabela DP.';
  document.getElementById('solution').innerText='';
  DP=null; problem=null; dpHistory=[]; currentStep=0;
});
</script>
</body>
</html>
